Function SanitizeSensitiveText(inputText As String) As String
    Dim txt As String
    txt = LCase(inputText)
    
    Dim regEx As Object
    Set regEx = CreateObject("VBScript.RegExp")
    
    '----------------------------
    ' Step 1: Regex for obvious sensitive patterns
    '----------------------------
    ' Example: numbers, emails, URLs
    regEx.Pattern = "\d+"
    regEx.Global = True
    txt = regEx.Replace(txt, "[Redacted]")
    
    regEx.Pattern = "https?://[^\s]+"
    txt = regEx.Replace(txt, "[Redacted]")
    
    regEx.Pattern = "\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}\b"
    txt = regEx.Replace(txt, "[Redacted]")
    
    '----------------------------
    ' Step 2: Spell check for unknown words
    '----------------------------
    Dim words() As String
    words = Split(txt, " ")
    
    Dim wdApp As Object
    Set wdApp = CreateObject("Word.Application")
    wdApp.Visible = False
    
    Dim i As Long
    Dim w As String
    For i = LBound(words) To UBound(words)
        w = words(i)
        If w <> "" And w Like "*[A-Za-z]*" Then
            If Not wdApp.CheckSpelling(w) Then
                words(i) = "[Redacted]"
            End If
        End If
    Next i
    
    wdApp.Quit
    Set wdApp = Nothing
    
    txt = Join(words, " ")
    
    SanitizeSensitiveText = txt
End Function
