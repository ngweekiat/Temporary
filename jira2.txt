Option Explicit

Private gBrowser As AutomateBrowser   ' keep Edge alive across calls

Function FetchXMLBySerial(ByVal serialNumber As String) As String
    Dim url As String
    Dim targetId As String
    Dim sessionId As String
    Dim evalRes As Dictionary
    Dim start As Date, timeoutSeconds As Long
    Dim msg As Dictionary
    
    ' Launch browser once if not already started
    If gBrowser Is Nothing Then
        Set gBrowser = New_AutomateBrowser
        gBrowser.launch whichBrowser:=browserType.Edge, _
                        url:="about:blank", _
                        killWithoutAsking:=True
        gBrowser.cdp.Page.enable
        gBrowser.cdp.Runtime.enable
        gBrowser.cdp.Network.enable
    End If
    
    ' Build URL for this serial
    url = "https://yourserver/path/to/" & serialNumber & ".xml"
    
    ' Create a new tab
    targetId = gBrowser.cdp.Target.createTarget(url)
    
    ' Attach to that tab and get sessionId
    sessionId = gBrowser.cdp.Target.attachToTarget(targetId, True)
    
    ' Wait until load event
    timeoutSeconds = 10
    start = Now
    Do While DateDiff("s", start, Now) < timeoutSeconds
        gBrowser.cdp.peakMessage
        Set msg = gBrowser.cdp.popMessageFromQueue
        If Not msg Is Nothing Then
            If msg.Exists("method") Then
                If msg("method") = "Page.loadEventFired" Then Exit Do
            End If
        End If
        DoEvents
    Loop
    
    ' Evaluate outerHTML in the correct session
    Set evalRes = gBrowser.cdp.Runtime.evaluate( _
                      "document.documentElement.outerHTML", sessionId)
    
    If Not evalRes Is Nothing Then
        FetchXMLBySerial = evalRes("result")("value")
    Else
        FetchXMLBySerial = vbNullString
    End If
    
    ' Close the tab afterwards
    gBrowser.cdp.Target.closeTarget targetId
End Function


Sub TestFetchXML()
    Dim serials As Variant, sn As Variant, xml As String
    
    serials = Array("12345", "67890", "ABCDE")
    
    For Each sn In serials
        xml = FetchXMLBySerial(sn)
        Debug.Print "Serial " & sn & ": length=" & Len(xml)
        Debug.Print Left(xml, 200) & "..."   ' preview
    Next
    
    CloseBrowser
End Sub

Sub CloseBrowser()
    If Not gBrowser Is Nothing Then
        gBrowser.Quit
        Set gBrowser = Nothing
    End If
End Sub

