Option Explicit

Private gBrowser As AutomateBrowser   ' keep Edge alive across calls

Function FetchXMLBySerial(ByVal serialNumber As String) As String
    Dim url As String
    Dim evalRes As Dictionary
    Dim start As Date, timeoutSeconds As Long
    Dim msg As Dictionary
    
    ' Launch browser once if not already started
    If gBrowser Is Nothing Then
        Set gBrowser = New_AutomateBrowser
        gBrowser.launch whichBrowser:=browserType.Edge, _
                        url:="about:blank", _
                        killWithoutAsking:=True
        gBrowser.cdp.Page.enable
        gBrowser.cdp.Runtime.enable
        gBrowser.cdp.Network.enable
    End If
    
    ' Build URL for this serial
    url = "https://yourserver/path/to/" & serialNumber & ".xml"
    
    ' Navigate current tab to the new URL
    gBrowser.cdp.Page.navigate url
    
    ' Wait until load event
    timeoutSeconds = 10
    start = Now
    Do While DateDiff("s", start, Now) < timeoutSeconds
        gBrowser.cdp.peakMessage
        Set msg = gBrowser.cdp.popMessageFromQueue
        If Not msg Is Nothing Then
            If msg.Exists("method") Then
                If msg("method") = "Page.loadEventFired" Then Exit Do
            End If
        End If
        DoEvents
    Loop
    
    ' Evaluate outerHTML of the loaded page
    Set evalRes = gBrowser.cdp.Runtime.evaluate("document.documentElement.outerHTML")
    
    If Not evalRes Is Nothing Then
        FetchXMLBySerial = evalRes("result")("value")
    Else
        FetchXMLBySerial = vbNullString
    End If
End Function


Sub TestFetchXML()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim r As Long
    Dim serialNumber As String
    Dim xml As String
    Dim fieldValue As String
    
    Set ws = ThisWorkbook.Sheets(1)
    
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    For r = 2 To lastRow
        serialNumber = Trim(ws.Cells(r, "A").Value)
        
        If Len(serialNumber) > 0 Then
            xml = FetchXMLBySerial(serialNumber)
            
            ' Write raw XML into col B (optional)
            ws.Cells(r, "B").Value = xml
            
            ' Extract only the customfield_11222 contents into col C
            fieldValue = ExtractCustomFieldValue(xml, "customfield_11222")
            ws.Cells(r, "C").Value = fieldValue
        End If
    Next r
    
    CloseBrowser
End Sub


Function ExtractCustomFieldValue(xml As String, fieldId As String) As String
    Dim xDoc As Object
    Dim node As Object
    
    On Error Resume Next
    Set xDoc = CreateObject("MSXML2.DOMDocument.6.0")
    xDoc.async = False
    xDoc.validateOnParse = False
    
    If Not xDoc.LoadXML(xml) Then
        ExtractCustomFieldValue = ""   ' invalid XML
        Exit Function
    End If
    
    ' Find the node by XPath
    Set node = xDoc.SelectSingleNode("//customfield[@id='" & fieldId & "']")
    If Not node Is Nothing Then
        ExtractCustomFieldValue = node.Text
    Else
        ExtractCustomFieldValue = ""
    End If
End Function




Sub CloseBrowser()
    If Not gBrowser Is Nothing Then
        gBrowser.Quit
        Set gBrowser = Nothing
    End If
End Sub
