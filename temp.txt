Option Explicit

#If VBA7 Then
    Private Declare PtrSafe Function FindWindow Lib "user32" Alias "FindWindowA" _
        (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr

    Private Declare PtrSafe Function SetWindowPos Lib "user32" _
        (ByVal hwnd As LongPtr, ByVal hWndInsertAfter As LongPtr, _
        ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, _
        ByVal wFlags As Long) As Long

    Private Declare PtrSafe Function GetForegroundWindow Lib "user32" () As LongPtr
#Else
    Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" _
        (ByVal lpClassName As String, ByVal lpWindowName As String) As Long

    Private Declare Function SetWindowPos Lib "user32" _
        (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
        ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, _
        ByVal wFlags As Long) As Long

    Private Declare Function GetForegroundWindow Lib "user32" () As Long
#End If

Private Const SWP_NOSIZE As Long = &H1
Private Const SWP_NOMOVE As Long = &H2
Private Const SWP_NOACTIVATE As Long = &H10
Private Const HWND_TOPMOST As Long = -1

Private Sub UserForm_Initialize()
    ' Populate dropdown with options
    With cmbOptions
        .AddItem "Option 1"
        .AddItem "Option 2"
        .AddItem "Option 3"
    End With
End Sub

Private Sub UserForm_Activate()
    ' Keep form always on top
    Dim hWndForm As LongPtr
    hWndForm = FindWindow(vbNullString, Me.Caption)
    SetWindowPos hWndForm, HWND_TOPMOST, 0, 0, 0, 0, _
                 SWP_NOMOVE Or SWP_NOSIZE Or SWP_NOACTIVATE
End Sub

Private Sub cmbOptions_Click()
    ' Copy selected item to clipboard
    Dim DataObj As Object
    Set DataObj = CreateObject("MSForms.DataObject")
    DataObj.SetText cmbOptions.Value
    DataObj.PutInClipboard
End Sub


Sub ShowClipboardTool()
    frmClipboardTool.Show vbModeless
End Sub




#If VBA7 Then
    Private Declare PtrSafe Function OpenClipboard Lib "user32" (ByVal hwnd As LongPtr) As Long
    Private Declare PtrSafe Function CloseClipboard Lib "user32" () As Long
    Private Declare PtrSafe Function EmptyClipboard Lib "user32" () As Long
    Private Declare PtrSafe Function SetClipboardData Lib "user32" (ByVal wFormat As Long, ByVal hMem As LongPtr) As LongPtr
    Private Declare PtrSafe Function GlobalAlloc Lib "kernel32" (ByVal wFlags As Long, ByVal dwBytes As LongPtr) As LongPtr
    Private Declare PtrSafe Function GlobalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
    Private Declare PtrSafe Function GlobalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long
    Private Declare PtrSafe Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" _
        (Destination As Any, Source As Any, ByVal Length As LongPtr)
#Else
    ' (32-bit declarations here if needed)
#End If

Private Const CF_TEXT As Long = 1
Private Const GMEM_MOVEABLE As Long = &H2

Private Sub CopyToClipboard(ByVal sText As String)
    Dim hGlobal As LongPtr, lpGlobal As LongPtr
    
    ' Allocate memory
    hGlobal = GlobalAlloc(GMEM_MOVEABLE, LenB(sText) + 1)
    If hGlobal <> 0 Then
        lpGlobal = GlobalLock(hGlobal)
        If lpGlobal <> 0 Then
            CopyMemory ByVal lpGlobal, ByVal StrPtr(sText), LenB(sText)
            GlobalUnlock hGlobal
            If OpenClipboard(0&) Then
                EmptyClipboard
                SetClipboardData CF_TEXT, hGlobal
                CloseClipboard
            End If
        End If
    End If
End Sub

