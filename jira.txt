Option Explicit

Sub Edge_LogAllCDPEvents_AndDumpHTML()
    Dim b As AutomateBrowser
    Dim msg As Dictionary
    Dim html As String
    Dim pageLoaded As Boolean
    Dim start As Date
    Dim timeoutSeconds As Long
    
    Set b = New_AutomateBrowser
    
    ' Launch Edge
    b.launch whichBrowser:=browserType.Edge, _
             url:="https://en.wikipedia.org/wiki/Kitten", _
             killWithoutAsking:=True
    
    ' Enable the domains we need
    b.cdp.Page.enable
    b.cdp.DOM.enable
    b.cdp.Runtime.enable
    b.cdp.Network.enable
    
    pageLoaded = False
    timeoutSeconds = 20
    start = Now
    
    ' Wait loop until page load event or timeout
    Do While (Not pageLoaded) And (DateDiff("s", start, Now) < timeoutSeconds)
        ' Pull new messages
        b.cdp.peakMessage
        
        ' Process queue
        Do
            Set msg = b.cdp.popMessageFromQueue
            If msg Is Nothing Then Exit Do
            
            ' Check for Page.loadEventFired (page finished loading)
            If msg.Exists("method") Then
                If msg("method") = "Page.loadEventFired" Then
                    pageLoaded = True
                    Debug.Print ">>> Page finished loading"
                End If
            End If
        Loop
        
        DoEvents
    Loop
    
    If Not pageLoaded Then
        Debug.Print "Timed out waiting for page to load"
    End If
    
    ' Get HTML snapshot
    html = CStr(b.jsEval("document.documentElement.outerHTML"))
    Debug.Print "=== HTML Snapshot ==="
    Debug.Print Left(html, 1000)   ' print first 1000 chars only
    Debug.Print "HTML length = " & Len(html)
    
    b.Quit
End Sub



'-------------------------------------
Option Explicit

Sub Edge_GetXMLRaw()
    Dim b As AutomateBrowser
    Dim msg As Dictionary
    Dim resp As Dictionary
    Dim reqId As String
    Dim xmlText As String
    Dim timeoutSeconds As Long
    Dim start As Date
    
    Set b = New_AutomateBrowser
    
    ' Launch Edge directly to XML file URL
    b.launch whichBrowser:=browserType.Edge, _
             url:="https://yourserver/path/to/file.xml", _
             killWithoutAsking:=True
    
    ' Enable Network domain so we can see responses
    b.cdp.Network.enable
    
    timeoutSeconds = 15
    start = Now
    reqId = vbNullString
    
    ' Wait for first Network.responseReceived
    Do While DateDiff("s", start, Now) < timeoutSeconds
        b.cdp.peakMessage
        Set msg = b.cdp.popMessageFromQueue
        If Not msg Is Nothing Then
            If msg.Exists("method") Then
                If msg("method") = "Network.responseReceived" Then
                    reqId = msg("params")("requestId")
                    Exit Do
                End If
            End If
        End If
        DoEvents
    Loop
    
    If reqId <> vbNullString Then
        ' Ask CDP for the raw response body
        Set resp = b.cdp.InvokeMethod("Network.getResponseBody", _
                     MakeDict("requestId", reqId))
        If Not resp Is Nothing Then
            xmlText = resp("body")
            
            ' Trim to start at <rss
            Dim pos As Long
            pos = InStr(1, xmlText, "<rss", vbTextCompare)
            If pos > 0 Then xmlText = Mid$(xmlText, pos)
            
            Debug.Print "=== XML Contents ==="
            Debug.Print Left(xmlText, 1000)  ' preview first 1000 chars
            Debug.Print "XML length = " & Len(xmlText)
        End If
    Else
        Debug.Print "No response captured."
    End If
    
    b.Quit
End Sub

' Helper to build a dictionary easily
Private Function MakeDict(key As String, val As String) As Dictionary
    Dim d As New Dictionary
    d.Add key, val
    Set MakeDict = d
End Function
